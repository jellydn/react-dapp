/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ce238038062000ce28339818101604052810190620000379190620002dc565b6200006760405180606001604052806022815260200162000cc060229139826200008760201b620001ce1760201c565b80600090805190602001906200007f9291906200018b565b505062000529565b620001298282604051602401620000a092919062000362565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b62000153816200014e6200015660201b6200026a176200017760201b60201c565b60201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6200021c60201b6200034f17819050919050565b82805462000199906200044e565b90600052602060002090601f016020900481019282620001bd576000855562000209565b82601f10620001d857805160ff191683800117855562000209565b8280016001018555821562000209579182015b8281111562000208578251825591602001919060010190620001eb565b5b5090506200021891906200024b565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b5b80821115620002665760008160009055506001016200024c565b5090565b6000620002816200027b84620003c6565b6200039d565b9050828152602081018484840111156200029a57600080fd5b620002a784828562000418565b509392505050565b600082601f830112620002c157600080fd5b8151620002d38482602086016200026a565b91505092915050565b600060208284031215620002ef57600080fd5b600082015167ffffffffffffffff8111156200030a57600080fd5b6200031884828501620002af565b91505092915050565b60006200032e82620003fc565b6200033a818562000407565b93506200034c81856020860162000418565b620003578162000518565b840191505092915050565b600060408201905081810360008301526200037e818562000321565b9050818103602083015262000394818462000321565b90509392505050565b6000620003a9620003bc565b9050620003b7828262000484565b919050565b6000604051905090565b600067ffffffffffffffff821115620003e457620003e3620004e9565b5b620003ef8262000518565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620004385780820151818401526020810190506200041b565b8381111562000448576000848401525b50505050565b600060028204905060018216806200046757607f821691505b602082108114156200047e576200047d620004ba565b5b50919050565b6200048f8262000518565b810181811067ffffffffffffffff82111715620004b157620004b0620004e9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61078780620005396000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b61005560048036038101906100509190610489565b610075565b005b61005f61013c565b60405161006c9190610503565b60405180910390f35b61012260405180606001604052806023815260200161072f602391396000805461009e9061065c565b80601f01602080910402602001604051908101604052809291908181526020018280546100ca9061065c565b80156101175780601f106100ec57610100808354040283529160200191610117565b820191906000526020600020905b8154815290600101906020018083116100fa57829003601f168201915b50505050508361028b565b806000908051906020019061013892919061037e565b5050565b60606000805461014b9061065c565b80601f01602080910402602001604051908101604052809291908181526020018280546101779061065c565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b5050505050905090565b61026682826040516024016101e4929190610525565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061032a565b5050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6103258383836040516024016102a39392919061055c565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061032a565b505050565b6103418161033961026a610344565b63ffffffff16565b50565b61034f819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b82805461038a9061065c565b90600052602060002090601f0160209004810192826103ac57600085556103f3565b82601f106103c557805160ff19168380011785556103f3565b828001600101855582156103f3579182015b828111156103f25782518255916020019190600101906103d7565b5b5090506104009190610404565b5090565b5b8082111561041d576000816000905550600101610405565b5090565b600061043461042f846105cd565b6105a8565b90508281526020810184848401111561044c57600080fd5b61045784828561061a565b509392505050565b600082601f83011261047057600080fd5b8135610480848260208601610421565b91505092915050565b60006020828403121561049b57600080fd5b600082013567ffffffffffffffff8111156104b557600080fd5b6104c18482850161045f565b91505092915050565b60006104d5826105fe565b6104df8185610609565b93506104ef818560208601610629565b6104f88161071d565b840191505092915050565b6000602082019050818103600083015261051d81846104ca565b905092915050565b6000604082019050818103600083015261053f81856104ca565b9050818103602083015261055381846104ca565b90509392505050565b6000606082019050818103600083015261057681866104ca565b9050818103602083015261058a81856104ca565b9050818103604083015261059e81846104ca565b9050949350505050565b60006105b26105c3565b90506105be828261068e565b919050565b6000604051905090565b600067ffffffffffffffff8211156105e8576105e76106ee565b5b6105f18261071d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561064757808201518184015260208101905061062c565b83811115610656576000848401525b50505050565b6000600282049050600182168061067457607f821691505b60208210811415610688576106876106bf565b5b50919050565b6106978261071d565b810181811067ffffffffffffffff821117156106b6576106b56106ee565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a26469706673582212200434c17b5cc59746651555216e9b0efad93a34eb953e33d7eff66821bef0e94664736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
