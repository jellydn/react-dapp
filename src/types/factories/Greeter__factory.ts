/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c2238038062000c22833981810160405281019062000037919062000270565b6200006760405180606001604052806022815260200162000c0060229139826200008760201b620001ce1760201c565b80600090805190602001906200007f9291906200014e565b5050620004bd565b620001298282604051602401620000a0929190620002f6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b8280546200015c90620003e2565b90600052602060002090601f016020900481019282620001805760008555620001cc565b82601f106200019b57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cb578251825591602001919060010190620001ae565b5b509050620001db9190620001df565b5090565b5b80821115620001fa576000816000905550600101620001e0565b5090565b6000620002156200020f846200035a565b62000331565b9050828152602081018484840111156200022e57600080fd5b6200023b848285620003ac565b509392505050565b600082601f8301126200025557600080fd5b815162000267848260208601620001fe565b91505092915050565b6000602082840312156200028357600080fd5b600082015167ffffffffffffffff8111156200029e57600080fd5b620002ac8482850162000243565b91505092915050565b6000620002c28262000390565b620002ce81856200039b565b9350620002e0818560208601620003ac565b620002eb81620004ac565b840191505092915050565b60006040820190508181036000830152620003128185620002b5565b90508181036020830152620003288184620002b5565b90509392505050565b60006200033d62000350565b90506200034b828262000418565b919050565b6000604051905090565b600067ffffffffffffffff8211156200037857620003776200047d565b5b6200038382620004ac565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003cc578082015181840152602081019050620003af565b83811115620003dc576000848401525b50505050565b60006002820490506001821680620003fb57607f821691505b602082108114156200041257620004116200044e565b5b50919050565b6200042382620004ac565b810181811067ffffffffffffffff821117156200044557620004446200047d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61073380620004cd6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b61005560048036038101906100509190610435565b610075565b005b61005f61013c565b60405161006c91906104af565b60405180910390f35b6101226040518060600160405280602381526020016106db602391396000805461009e90610608565b80601f01602080910402602001604051908101604052809291908181526020018280546100ca90610608565b80156101175780601f106100ec57610100808354040283529160200191610117565b820191906000526020600020905b8154815290600101906020018083116100fa57829003601f168201915b50505050508361026a565b806000908051906020019061013892919061032a565b5050565b60606000805461014b90610608565b80601f016020809104026020016040519081016040528092919081815260200182805461017790610608565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b5050505050905090565b61026682826040516024016101e49291906104d1565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610309565b5050565b61030483838360405160240161028293929190610508565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610309565b505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b82805461033690610608565b90600052602060002090601f016020900481019282610358576000855561039f565b82601f1061037157805160ff191683800117855561039f565b8280016001018555821561039f579182015b8281111561039e578251825591602001919060010190610383565b5b5090506103ac91906103b0565b5090565b5b808211156103c95760008160009055506001016103b1565b5090565b60006103e06103db84610579565b610554565b9050828152602081018484840111156103f857600080fd5b6104038482856105c6565b509392505050565b600082601f83011261041c57600080fd5b813561042c8482602086016103cd565b91505092915050565b60006020828403121561044757600080fd5b600082013567ffffffffffffffff81111561046157600080fd5b61046d8482850161040b565b91505092915050565b6000610481826105aa565b61048b81856105b5565b935061049b8185602086016105d5565b6104a4816106c9565b840191505092915050565b600060208201905081810360008301526104c98184610476565b905092915050565b600060408201905081810360008301526104eb8185610476565b905081810360208301526104ff8184610476565b90509392505050565b600060608201905081810360008301526105228186610476565b905081810360208301526105368185610476565b9050818103604083015261054a8184610476565b9050949350505050565b600061055e61056f565b905061056a828261063a565b919050565b6000604051905090565b600067ffffffffffffffff8211156105945761059361069a565b5b61059d826106c9565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156105f35780820151818401526020810190506105d8565b83811115610602576000848401525b50505050565b6000600282049050600182168061062057607f821691505b602082108114156106345761063361066b565b5b50919050565b610643826106c9565b810181811067ffffffffffffffff821117156106625761066161069a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220c01235ec2af8bfeba17a48d45f3108f1115fdd838a530dd99a79755fa71e7e4764736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
